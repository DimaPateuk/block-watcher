apiVersion: apps/v1
kind: Deployment
metadata:
  name: block-watcher
  namespace: block-watcher
  labels:
    app: block-watcher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: block-watcher
  template:
    metadata:
      labels:
        app: block-watcher
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/metrics"
    spec:
      initContainers:
      - name: prisma-migrate
        image: block-watcher:local
        imagePullPolicy: Never
        command: ["npx", "prisma", "db", "push"]
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DATABASE_URL
      containers:
      - name: block-watcher
        image: block-watcher:local
        imagePullPolicy: Never
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        envFrom:
        - secretRef:
            name: env-secret  # All variables from .env file
        env:
        - name: NODE_ENV
          value: "development"
        - name: PORT
          value: "3000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DATABASE_URL
        livenessProbe:
          httpGet:
            path: /api/health/liveness
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health/readiness
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"